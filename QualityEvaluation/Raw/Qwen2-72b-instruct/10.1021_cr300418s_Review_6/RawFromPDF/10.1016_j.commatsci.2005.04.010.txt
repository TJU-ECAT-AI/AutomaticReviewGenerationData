A fast and robust algorithm for Bader decomposition
of charge density
Graeme Henkelman a,*, Andri Arnaldsson b, Hannes Jo
´nsson b,c
a Department of Chemistry and Biochemistry, The University of Texas at Austin, Austin, TX 78712-0165, United States
b Department of Chemistry 351700, University of Washington, Seattle, WA 98195-1700, United States
c Faculty of Science, VR-II, University of Iceland, 107 Reykjavı
´k, Iceland
Received 29 April 2004; received in revised form 1 December 2004; accepted 10 April 2005
Abstract
An algorithm is presented for carrying out decomposition of electronic charge density into atomic contributions. As suggested by
Bader [R. Bader, Atoms in Molecules: A Quantum Theory, Oxford University Press, New York, 1990], space is divided up into
atomic regions where the dividing surfaces are at a minimum in the charge density, i.e. the gradient of the charge density is zero
along the surface normal. Instead of explicitly ﬁnding and representing the dividing surfaces, which is a challenging task, our
algorithm assigns each point on a regular (x,y,z) grid to one of the regions by following a steepest ascent path on the grid. The
computational work required to analyze a given charge density grid is approximately 50 arithmetic operations per grid point.
The work scales linearly with the number of grid points and is essentially independent of the number of atoms in the system.
The algorithm is robust and insensitive to the topology of molecular bonding. In addition to two test problems involving a water
molecule and NaCl crystal, the algorithm has been used to estimate the electrical activity of a cluster of boron atoms in a silicon
crystal. The highly stable three-atom boron cluster, B3I is found to have a charge of 1.5 e, which suggests approximately 50%
reduction in electrical activity as compared with three substitutional boron atoms.
 2005 Elsevier B.V. All rights reserved.
PACS: 31.15.p; 71.55.Cw; 72.80.cw; 61.72.Tt
Keywords: Atoms in molecules; Bader analysis; Electron density analysis; Atomic charges; Boron clusters; Linear scaling algorithm
1. Introduction
The properties of chemicals and materials are often
described in terms of charge transfer between atoms
and the presence of ionic charges or electric multipoles
on atoms or molecules. Theoretical calculations produc-
ing estimates of the electronic charge distribution in the
system can, in principle, provide this type of information
but it is not clear how to extract it. Atomic charges in
molecules or solids are not observables and, therefore,
not deﬁned by quantum mechanical theory. The output
of quantum mechanical calculations is a continuous
electronic charge density and it is not clear how one
should partition electrons amongst fragments of the sys-
tem such as atoms or molecules. Many diﬀerent schemes
have been proposed, some based on electronic orbitals
and others based on only the charge density (see for
example Ref. [1]).
The most commonly used orbital based method is the
so-called Mulliken analysis. It can be applied when basis
functions centered on atoms are used in the calculation
of the electronic wavefunction of the system. The charge
associated with the basis functions centered on a partic-
ular atom is then assigned to that atom. This can be a
0927-0256/$ - see front matter  2005 Elsevier B.V. All rights reserved.
doi:10.1016/j.commatsci.2005.04.010
* Corresponding author. Tel.: +1 512 471 4179.
E-mail address: henkelman@mail.utexas.edu (G. Henkelman).
www.elsevier.com/locate/commatsci
Computational Materials Science 36 (2006) 354–360
fast and useful way of determining partial charges on
atoms but it has the major drawback that the analysis
is sensitive to the choice of basis set. Furthermore, in
the limit of an inﬁnite basis, the assignment becomes
arbitrary. As an extreme case, a complete basis set can
be formed where all the basis functions are centered
on just one atom in the system. The Mulliken analysis
would then clearly be misleading as it would assign all
the electrons in the system to that one atom. Moreover,
many calculations are carried out with plane wave basis
functions which are not associated with any particular
atom in the system. Mulliken analysis is not applicable
in such cases.
A diﬀerent approach is to focus entirely on the charge
density as has been proposed by Bader [2]. Space is then
divided into regions by surfaces that run through
minima in the charge density. More precisely, at a point
on a dividing surface the gradient of the electron density
has no component normal to the surface. We will refer
to regions bounded by such dividing surfaces as Bader
regions. Because this analysis is based solely on the
charge density, it is rather insensitive to the basis set
used in the electron wavefunction calculation and can
be used to analyze plane wave based calculations as well
as calculations using atomic basis functions. Further-
more, it can be used to analyze electronic density
obtained by other means, for example from X-ray
crystallography. Each Bader region often contains one
nucleus, but this is not necessarily so, sometimes no
nucleus is found within a Bader region. By integrating
the electronic density within the Bader region where
an atoms nucleus is located, and possibly adding the
electronic charge in nearby regions that do not include
a nucleus, the total charge on an atom can be estimated.
A common complaint about Bader analysis is the
computational eﬀort and complexity of the algorithms
that have been developed [3,1]. Commonly used imple-
mentations [2,4,5] involve ﬁnding the critical points of
the charge density where $q = 0, followed by the con-
struction of the zero-ﬂux surfaces which intersect these
points and then integration of the electronic density
within each region. Several reﬁnements have been made
since the initial implementation of the method. Popelier
improved the basin integration method by using Cheby-
shev polynomials [6], along with a bisection method [7]
for ﬁnding dividing surfaces and increased integration
accuracy around critical points [2]. Popelier has also
suggested integrating the electric ﬁeld on the dividing
surface around atoms in order to ﬁnd the enclosed
charge through the divergence theorem [3]. Most re-
cently Malcolm and Popelier [8,9] have used dynamic
grid techniques introduced by Silvi and coworkers
[10,11] in order to eﬀectively treat complicated bonding
topology. A very diﬀerent approach was presented by
Uberuaga et al. where multiple replicas of the system
connected by springs form a discrete representation of
an elastic sheet that stretches along the dividing surface
surrounding a given Bader region [12].
In this paper, a simple and fast method for carrying
out Bader decomposition of electron density is pre-
sented. It is diﬀerent from the methods mentioned above
in that an explicit representation of the dividing surfaces
is not used and no attempt is made to locate stationary
points of the charge density. This makes the algorithm
more robust. Algorithms that are commonly used today
are known to have convergence problems in some cases
(an example involving clusters of water molecules is gi-
ven in Ref. [12]). As in several previous implementations
of Bader analysis, such as TopMoD [10], InteGriTy [13],
Extreme 94 [14], and MORPHY [4], it is assumed that
the electron density is represented by its values on a
regular grid in three-dimensions, but our method is
diﬀerent from previous methods in that only steepest
ascent trajectories conﬁned to the grid points are used
to identify the Bader regions. The algorithm is robust
since dividing surfaces and critical points do not need
to be found explicitly. This makes the method applicable
to systems with complicated bonding topology where
the representation of the dividing surfaces is diﬃcult.
Although the dividing surfaces are not found explicitly,
it is easy to render them for visualization after the anal-
ysis is complete. Bader regions which do not contain a
nucleus [15] do not pose a problem because the method
does not use the nuclear coordinates, neither in ﬁnding
Bader regions nor in the integration of the electron den-
sity. Furthermore, no assumption about the shape of the
Bader region is made in the integration of the electron
density. Such an assumption is, for example, made when
radial integration away from nuclei is used (see for
example [13]). Such a procedure is valid when radial rays
do not cross the dividing surface more than once but this
is not always the case [16]. The number of arithmetic
operations per grid point in our algorithm is insensitive
to the size of the grid and the number of atoms in the
system so the computational eﬀort scales linearly with
the number of grid points used in the representation of
the electron density. A description of the algorithm will
now be presented.
2. Grid based Bader decomposition
The input for the Bader decomposition is a charge
density grid, that gives the value of the electron density
speciﬁed on a regular grid of points in space. The spac-
ing between the grid points should be ﬁne enough that a
linear interpolation between the points is a suﬃciently
good approximation in the bonding region between
atoms. In order to ﬁnd out which grid points belong
to each of the Bader regions, a path of steepest ascent
on the charge density grid is deﬁned for each grid point.
The set of grid points that have paths ending in the same
G. Henkelman et al. / Computational Materials Science 36 (2006) 354–360
355
terminus of maximal charge density are members of the
same Bader region. Typically (but not always, for exam-
ple see Ref. [15]), these points of charge density maxima
are located at atomic nuclei. The total electronic charge
within a Bader region can then be approximated by the
sum over the corresponding grid points.
Some caution is needed when analyzing charge
density obtained by calculations based on pseudopoten-
tial representation of core electrons. An accurate repre-
sentation of the density in the core region where the
pseudowavefunction diﬀers from the true wavefunction
is not needed as long as there are no artiﬁcial minima
in the charge density. Such minima can form, for exam-
ple, close to the nucleus when using pseudopotentials for
elements with few valence electrons. In some cases this
problem can be alleviated by treating sub-valence elec-
trons explicitly and representing fewer electrons with
the pseudopotential. Otherwise, the value of the core
electron density can be added to the value of the valence
electron density at the grid points. It is easy to detect
whether the Bader dividing surfaces that separate atom-
ic regions lie inside core regions, and this option is
included in our software.
The charge density grid points are assumed here to
form an orthogonal lattice to simplify the description
of the algorithm, but a generalization to a non-orthogo-
nal lattice is straightforward. In order to associate each
grid point with a Bader region, a path of steepest ascent
in the charge density is found. To speed up the calcula-
tion, the paths are constrained to the grid points and a
move from a given grid point can only be made to one
of the 26 neighboring grid points. More speciﬁcally, a
steepest ascent move from a grid point (i,j,k), is made
along the direction which maximizes the charge density
gradient, $q, is calculated along the 26 possible direc-
tions, ^
r, towards adjacent grid points, using
rqði; j; kÞ  ^
rðdi; dj; dkÞ ¼ Dq
jD
~
rj
ð1Þ
where di, dj, dk are each assigned the values {1,0,1}
but excluding di = dj = dk = 0. The change in density
Dq ¼ qði þ di; j þ dj; k þ dkÞ  qði; j; kÞ
ð2Þ
and the distance
jD~
rj ¼ j
~
rði þ di; j þ dj; k þ dkÞ ~
rði; j; kÞj
ð3Þ
are evaluated between neighbors, where ~
rði; j; kÞ is the
Cartesian vector to the grid point (i,j,k). The steepest
ascent step selected, ~
rðdi; dj; dkÞ, is the one that maxi-
mizes the positive values of $q(i,j,k). If there are no
positive values, the point (i,j,k) is considered to be a
charge density maximum.
Fig. 1 illustrates the algorithm. The starting point of
the calculation is chosen to be (i1,j1,k1). A steepest as-
cent path is followed until a charge density maximum
m1 is found. The number assigned to the maximum (1
in this case) is entered in an array for each point along
the trajectory. In this way, each of the points along
the path is assigned to Bader region 1. A steepest ascent
path from each one of these points terminates at m1.
Then, the next point, (i2,j2,k2), in the grid that has not
already been assigned is taken as a starting point for a
new steepest ascent path. The path is extended until it
reaches a grid point that has already been assigned, or
when a new maximum is found. In Fig. 1(B), the second
path reaches a point known to be in Bader region 1 after
just two ascent steps, allowing the path to be terminated
early. Each point along the ascent path from (i2,j2,k2) is
then assigned to the region corresponding to m1. When
an ascent path from a point (in,jn,kn) reaches a new
maximum m2, as shown in Fig. 1(C), a new entry is
made in the list of known charge density maxima and
the points along the ascent path are given the value 2.
When a steepest ascent trajectory has been initiated
from all grid points, the partitioning analysis is com-
plete, and all grid points have then been assigned to a
Bader region. This assignment of the grid points to
Bader regions is all that is needed for further analysis
such as calculations of partial charges or multipole
(i1,j1,k1)
(in,jn,kn)
m1
m1
(i2,j2,k2)
m1
m2
m1
m2
m3
A
D
B
C
Fig. 1. An illustration of the steepest ascent paths on the charge
density grid that are used to ﬁnd Bader regions. (A) The ﬁrst path
starts from point (i1,j1,k1) and after four steepest ascent moves ends at
point m1, a point of maximum charge density. Each point along the
path is assigned to the region associated with m1. (B) The second path
starts from (i2,j2,k2) and is terminated after two moves when it reaches
a point which has already been assigned to m1 (stars indicate points
assigned to region 1). This process is repeated from each unassigned
grid point. (C) Starting from the point (in,jn,kn), a new maximum m2 is
found and all grid points which lead to this maximum are assigned to
m1. (D) After all grid points have been assigned, three maxima have
emerged and the three groups of grid points are shown with stars for
m1, hexagons for m2 and diamonds for m3.
356
G. Henkelman et al. / Computational Materials Science 36 (2006) 354–360
moments. The total electronic charge of each Bader
region can be found by summing over the grid points
assigned to that region, and the approximate location
of the dividing surfaces can be visualized by rendering
the charge density of each region separately.
This grid based analysis is highly eﬃcient. Since the
steepest ascent paths get terminated when a previously
assigned point has been reached, there is a ﬁxed amount
of work required for each grid point. This is dominated
by the calculation of the $q derivatives, requiring only
26 subtraction and multiplication operations per grid
point, and the same number of comparisons. The
computational eﬀort, therefore, scales linearly with the
number of grid points and is independent of the number
of atoms in the system. Typically the analysis takes a
comparable amount of time as simply reading the
charge density data from disk in the computer. The
analysis of a 2003 grid takes less than a minute on a
computer with a 1.8 GHz Athlon processor.
2.1. Applications
We ﬁrst describe results of calculations on three sim-
ple test systems where comparison can be made with
other Bader analysis algorithms, (a) a water molecule,
(b) NaCl crystal, and (c) MgO crystal. We then describe
an application to a study of electronic activity of a
cluster of boron dopant atoms in a silicon crystal.
2.1.1. Water molecule
The structure and charge density of a water molecule
was calculated with the aug-cc-pVDZ basis using Gaus-
sian 98 [17] at the MP2 level of perturbation theory. A
charge density was written as a 2013 grid in the cube ﬁle
format. On a computer with a 1.8 GHz Athlon proces-
sor, the 100 MB ﬁle took 18 s to load, and 40 s to ana-
lyze. Three Bader regions were found, each containing
one atom. The total charge in each one of the regions
around the hydrogen atoms contained 0.4238 electrons
and the oxygen region contained 9.1566 electrons, which
gives a sum of 10.0041 electrons. The atomic partial
charges are the same as found by Bader [2] (see Table
1), showing that these two diﬀerent algorithms yield
the same results.
The Bader surfaces for H2O are shown in Fig. 2. It is
typical of Bader surfaces to have sharp corners because
the Bader volumes around atoms must tile to ﬁll space.
It is also remarkable in the case of H2O how diﬀerent the
Bader volumes are from a Voronoi partitioning. Charge
density in the region between the hydrogen atoms is
associated with the oxygen atom, even though the
hydrogen atoms are closer by.
2.1.2. NaCl crystal
As another simple test problem, we have calculated
the charge on the ions in a NaCl crystal. Plane-wave
based DFT calculations were performed using the VASP
code [18–20] on an eight atom NaCl cell using a PAW
(projector augmented wave) procedure [21,22] and the
PW91 approximation to the density functional. The
system contains a total of 64 electrons, nine from each
of the Na atoms and seven from each of the Cl atoms.
A default plane wave energy cutoﬀin VASP was used,
700 eV (equivalent to 51.5 Ry). The Brillouin zone was
sampled with 2 · 2 · 2 Monkhorst–Pack k-point mesh.
A lattice constant of 5.68 A
˚ was found to minimize the
energy. The DFT calculation was repeated for various
values of the density of the secondary grid used in con-
nection with the PAW procedure. This determines the
mesh size of the charge density grid obtained from the
DFT calculations which is the input for the Bader anal-
ysis. Calculations were done for grids ranging from the
default size of 603 points and up to a grid with 2503
points. The spacing between adjacent grid points is
0.095 A
˚ in the former case, and 0.023 A
˚ in the latter.
The CPU time in the DFT calculation is dominated by
FFTs and is roughly proportional to the number of grid
points. However, a calculation with a ﬁner grid only
needs to be done once after the optimized atomic coor-
dinates have been found. Furthermore, the output from
Table 1
Partial charge of oxygen and hydrogen in an isolated water molecule
Partial charge
O atom
H atoms
Baders original work
1.16
+0.58
This work
1.157
+0.576
The results of the present analysis, based on a 2013 change density
generated from an MP2 calculation with the aug-cc-pVDZ basis set,
agree well with the results of Bader using an algorithm based on critical
point analysis [2].
Fig. 2. Dividing surfaces separating the oxygen and hydrogen Bader
regions in a water molecule. The integration over the Bader regions
indicates that 0.58 e are transferred from each hydrogen atom to the
oxygen atom.
G. Henkelman et al. / Computational Materials Science 36 (2006) 354–360
357
a calculation with a courser grid can be used as input for
a calculation on a ﬁner grid in many codes, for example
VASP. For NaCl, only six electronic iterations were
needed to converge a calculation with a 1003 grid when
the result of a calculation with a 603 grid was used as in-
put, while a calculation starting with no information
about the wave function requires 15 electronic itera-
tions. In calculations based on pseudopotentials or
PAW, such as this one, it is often advisable in any case
to carry out a separate DFT calculation for the charge
density analysis so as to include more electrons explicitly
(i.e. fewer electrons represented by the pseudo-potential
or frozen core) than during the optimization of the
atomic coordinates.
One indication of the quality of the result of the
Bader analysis is the total number of electrons obtained
from the integration over all the Bader regions (i.e. the
conservation of charge). When using the 603 grid, the
total number of electrons is reproduced with an error
less than 104. The error drops to 106 when using a
grid with 1603 points. The variation in the magnitude
of the charge on the eight ions in the system is 0.03 e
in the former case and 0.01 e in the latter. The charge
on the Na+ ions was found to be 0.863 e when using
the default grid, 0.871 e with a 1003 grid and 0.866 e
with a 2503 grid. Convergence in the atomic charge with
respect to the plane wave energy cutoﬀwas reached at
700 eV. For most practical purposes, a 0.01 e error in
the atomic charge is not of concern, especially given
the inherent arbitrariness in the deﬁnition of an atomic
charge in an extended system (such as a molecule or a
solid). The method is, therefore, found to be suﬃciently
accurate for most purposes in this case by using just the
default grid size, even though no interpolation between
the grid points is carried out. Using the default 603 grid,
the Bader analysis took 0.8 s of CPU time on a 1.8 GHz
Athlon based computer. Simply reading the charge
density ﬁle took nearly as long, 0.6 s.
Katan et al. [13] also carried out Bader analysis of
NaCl from a density grid obtained by DFT using the
PAW representation of core electrons. Their method is
based on three-dimensional cubic spline interpolation
between the grid points and a Newton–Raphson proce-
dure to locate critical points and dividing surfaces,
followed by integration along radial directions away
from nuclear positions. From calculations using a rather
ﬁne electron density grid, with a mesh size of 0.050 A
˚ ,
they report a charge of 0.8282 e for the Na-ions and a
charge of 0.8648 e for the Cl-ions. The diﬀerence in
the magnitude of the charge of the anion and cation pre-
sumably indicates errors in the numerical integration
over the Bader regions. When they used a very ﬁne grid
with a mesh size of 0.033 A
˚ , the diﬀerence in the magni-
tude of the charges was reduced to 0.01 e. This compar-
ison shows, surprisingly, that their algorithm requires
just as ﬁne a grid as our algorithm to converge the
atomic charges to within 0.01 e, even though it involves
interpolation between the grid points and is computa-
tionally more demanding.
2.1.3. MgO crystal
We ﬁnally describe brieﬂy calculations of atomic
charges in MgO. An analysis of the Madelung ﬁeld out-
side a MgO slab calculated using DFT with the LDA
functional has given an estimate of 1.8 e [23]. An appli-
cation of the AIMPAC algorithm of Bader [2] as imple-
mented in the ABINIT software [24] on a charge density
grid generated from DFT calculations gave the value
1.72 e [25]. Our method applied to a similar charge den-
sity grid gives the same value, 1.72 e [26]. This illustrates
further that our algorithm gives similar results to
the original algorithm of Bader and that the charges
obtained are in good agreement with the modeling of
the electrical ﬁeld.
2.1.4. Activity of B-clusters
We now describe brieﬂy the results of Bader analysis
of a three-atom boron cluster within a silicon crystal.
Boron is used in semiconductor technology to p-dope
silicon, making it conductive by hole transport. As
devices are made smaller, the concentration of dopant
atoms needs to be increased. In current devices, the
concentration of boron atoms is at or past the thermo-
dynamic solubility limit and boron clusters tend to form.
Cluster formation is known to reduce the electrical
activity of the dopant atoms. A particularly stable
cluster is the B3I cluster [27] shown in Fig. 3. The B3
indicates that this cluster has three boron atoms, and
the I refers to the fact that the total number of atoms
is one greater than in the perfect silicon crystal. In order
to model diﬀusion and electrical activity of dopant
atoms, it is important to have information about the sta-
bility and electrical activity of such clusters. Short time
annealing at high temperature is used to break the clus-
ters up to a large extent in todays technology. Experi-
mental measurements have shown that annealing at
about 1000 C for a few seconds brings the electrical
activity to on the order of 50% of what would be
expected from fully dispersed boron dopant atoms
[28]. At that stage, the order in the Si crystal is presum-
ably largely restored and large B-clusters broken up, but
some particularly stable B-clusters remain. Nearly full
electronic activity is obtained after ca. 100 s.
Density functional theory calculations were carried
out for the a linear conﬁguration of the B3I cluster in
a silicon crystal (see Fig. 3). This has been shown to
be a particularly stable boron cluster and is likely to sur-
vive short time annealing [27]. The PW91 functional was
used with plane wave basis set up to a 231 eV cutoﬀand
ultrasoft pseudopotentials [29]. The calculations were
carried out using the VASP code [18–20]. A 2 · 2 · 2
Monkhorst–Pack k-point mesh was found to give a
358
G. Henkelman et al. / Computational Materials Science 36 (2006) 354–360
suﬃcient sampling of the Brillouin zone. The simulation
cell contains a total of 62 silicon atoms and three boron
atoms. An extra electron was added to the unit cell
because it is thought that the lowest energy structure
of B3I is negatively charged [27].
The charge density was generated on a grid with 883
points. The resulting 12 MB ﬁle was read in 2 s and ana-
lyzed in 3 s on the 1.8 GHz Athlon computer. The divid-
ing surface around the Bader regions corresponding to
the boron cluster is shown in Fig. 3. The total charge
contained within these regions is 10.5 e. Each boron
has a valance charge of three electrons, so the overall
predicted charge of the cluster is 1.5 e. A single substi-
tutional boron atom in a silicon crystal is found to have
a charge of 0.9 e, so the Bader analysis suggests that
formation of B3I clusters reduces boron electronic activ-
ity by ca. 50%. Previous analysis of the activity of dop-
ant clusters has been based on estimates of the relative
stability of systems with diﬀerent number of electrons.
Such calculations of neutral, 1 and 2 charged B3I
in silicon systems have indicated that the 1 charge is
the most stable state [27], which is quite consistent with
our results. The Bader analysis presented here may be a
more direct and a much faster way to determine the elec-
tronic activity by directly estimating the charge on the
boron cluster. Further analysis of the electrical activity
of boron and other dopant clusters in silicon will be pre-
sented elsewhere.
3. Scaling of eﬀort
A major advantage of the algorithm presented here
over other algorithms for Bader analysis we are aware
of is its speed. Other algorithms are based on ﬁnding
the location of critical points and representing the divid-
ing surfaces for the electron density, both of which are
very challenging tasks. These are particularly important
considerations in solid state systems where a calculation
may include on the order of 102 atoms as in the boron
dopant cluster problem discussed above.
The algorithm presented here can easily be applied to
large systems. There is a ﬁxed computational eﬀort per
electron density grid point and the overall computer
time, therefore, scales linearly with the number of grid
points. Fig. 4 shows the computer time required to ana-
lyze charge density ﬁles of various sizes for the boron
cluster in silicon. Cubic grids ranging from 883 to 2003
points were analyzed in times between 3 s and 45 s on
the 1.8 GHz Athlon based computer. The computer time
clearly scales linearly with the number of grid points.
The slope of the line corresponds to analyzing a million
grid points in 5.6 s. The largest charge density grid with
2013 points was generated from a calculation of a H2O
molecule. This three atom system required the same
computational eﬀort as the 65 atom boron cluster
system with a similar grid size, showing that the
computer time neither depends upon the number of
atoms in the system nor the bonding topology.
0
10
20
30
40
50
0
2
4
6
8
Grid Points (millions)
Analysis Time  (s)
883
1003
1503
1803
2003
2013
(H2O)
5.6 s/million grid points
Fig. 4. Timing results for the Bader analysis of a triatomic boron
cluster in silicon. The computer time scales linearly with the number of
grid points in the charge density ﬁle. A charge density ﬁle generated
from H2O (the last point) takes the same amount of time to analyze as
the 65 atom B3I cluster, showing that the computer time is independent
of the number of atoms in the system.
Fig. 3. End-on view (A) and side-view (B) of the Bader surface around
three atom boron cluster in a silicon crystal. Integration over the Bader
region indicates that 1.5 e have been transferred from the silicon atoms
to the boron cluster, suggesting that the cluster has about 50% of the
electronic activity of three substitutional B atoms.
G. Henkelman et al. / Computational Materials Science 36 (2006) 354–360
359
The software including source code for the Bader
analysis program described here, as well as instructions
for running the program are available on the web site
http://theory.cm.utexas.edu/bader.
4. Summary
We have presented here a simple and yet eﬃcient
algorithm for dividing up electron density of molecules
and condensed phase systems using the partitioning
criteria proposed by Bader. The method is fast and
robust while the computational eﬀort scales linearly with
the number of grid points. The time it takes to carry out
the analysis is on the order of the time it takes to read in
the electron density grid data from the computers hard
disk. The method was tested by assigning charges to
atoms in a water molecule and in a NaCl crystal. Our re-
sults agree well with results obtained with other Bader
analysis algorithms. We have, furthermore, used the
method to analyze electrical activity of a three-atom
boron cluster in a silicon crystal, B3I. The cluster was
found to have a charge of 1.5 e which indicates half
as large electrical activity as compared with three substi-
tutional boron atoms.
Acknowledgements
We would like to thank Fernando Vila for generating
the Gaussian charge densities cube ﬁles for a water
molecule and Hugo Bohorquez for helpful suggestions
regarding the manuscript. This work was funded by
NSF under grant CHE-0111468 and by LSI Logic Inc.
through a grant from the Semiconductor Research Cor-
poration. GH acknowledges support from the Robert A.
Welch Foundation under grant no. F-1601.
References
[1] F.D. Proft, C.V. Alsenoy, A. Peeters, W. Langenaeker, P.
Geerlings, J. Comput. Chem. 23 (2002) 1198.
[2] R. Bader, Atoms in Molecules: A Quantum Theory, Oxford
University Press, New York, 1990.
[3] P.L.A. Popelier, Theor. Chem. Acc. 105 (2001) 393.
[4] P.L.A. Popelier, MORPHY98, A program written by P.L.A.
Popelier with a contribution from R.G.A. Bone. UMIST, Man-
chester, England, 1998.
[5] B.B. Stefanov, J. Cioslowski, J. Comput. Chem. 16 (1995)
1394.
[6] P.L.A. Popelier, Theor. Chim. Acta 87 (1994) 465.
[7] P.L.A. Popelier, Comp. Phys. Commun. 108 (1998) 180.
[8] N.O.J. Malcolm, P.L.A. Popelier, J. Comput. Chem. 24 (2003)
437.
[9] N.O.J. Malcolm, P.L.A. Popelier, J. Comput. Chem. 24 (2003)
1276.
[10] S. Noury, X. Krokidis, F. Fuster, B. Silvi, Comput. Chem. 23
(1997) 597.
[11] B. Silvi, C. Gatti, J. Phys. Chem. A 104 (2000) 947.
[12] B.P. Uberuaga, E.R. Batista, H. Jo
´nsson, J. Chem. Phys. 111
(1999) 10664.
[13] C. Katan, P. Rabiller, C. Lecomte, M. Guezo, V. Oison, M.
Souhassou, J. Appl. Cryst. 36 (2003) 65.
[14] Y. Aray, J. Rodrı
´guez, J. Rivero, J. Phys. Chem. A 101 (1997)
6976.
[15] G.K.H. Madsen, C. Gatti, B.B. Iversen, L. Damjavonic, G.D.
Stucky, V.I. Srdanov, Phys. Rev. B 59 (1999) 12359.
[16] F.W.B. Ko
¨nig, R.F.W. Bader, T. Tang, J. Comput. Chem. 3
(1998) 317.
[17] M.J. Frisch, G.W. Trucks, H.B. Schlegel, M.A.R.G.E. Scuseria,
J.R. Cheeseman, V.G. Zakrzewski, J.J.A. Montgomery, R.E.
Stratmann, J.C. Burant, S. Dapprich, J.M. Millam, A.D. Daniels,
K.N. Kudin, M.C. Strain, O. Farkas, J. Tomasi, V. Barone, M.
Cossi, R. Cammi, B. Mennucci, C. Pomelli, C. Adamo, S. Cliﬀord,
J. Ochterski, G.A. Petersson, P.Y. Ayala, Q. Cui, K. Morokuma,
D.K. Malick, A.D. Rabuck, K. Raghavachari, J.B. Foresman, J.
Cioslowski, J.V. Ortiz, A.G. Baboul, B.B. Stefanov, G. Liu, A.
Liashenko, P. Piskorz, I. Komaromi, R. Gomperts, R.L. Martin,
D.J. Fox, T. Keith, M.A. Al-Laham, C.Y. Peng, A. Nanayakkara,
C. Gonzalez, M. Challacombe, P.M.W. Gill, B. Johnson, W.
Chen, M.W. Wong, J.L. Andres, C. Gonzalez, M. Head-Gordon,
E.S. Replogle, J.A. Pople, Gaussian 98, Revision A. 7, Gaussian
Inc., Pittsburgh PA, 1998.
[18] G. Kresse, J. Hafner, Phys. Rev. B 47 (1993) 558.
[19] G. Kresse, J. Hafner, Phys. Rev. B 49 (1994) 14251.
[20] G. Kresse, J. Furthmu
¨ller, Comput. Mater. Sci. 6 (1996) 16.
[21] P.E. Blo
¨chl, Phys. Rev. B 50 (1994) 17953.
[22] G. Kresse, J. Joubert, Phys. Rev. B 59 (1999) 1758.
[23] U. Berkenheuer, N. Ro
¨sch, J.C. Boettger, J. Chem. Phys. 100
(1994) 6826.
[24] X. Gonze, J.M. Beuken, R. Caracas, F. Detraux, M. Fuchs, G.-
M. Rignanese, L. Sindic, M. Verstraete, G. Zerah, F. Jollet, M.
Torrent, A. Roy, M. Mikami, P. Ghosez, J.-Y. Raty, D. Allan,
Comput. Mater. Sci. 25 (2002) 478.
[25] C. Noguera, A. Pojani, P. Casek, F. Finocchi, Surf. Sci. 507–510
(2002) 245.
[26] B.P. Uberuaga, R. Smith, A.R. Cleave, G. Henkelman, R.W.
Grimes, A.F. Voter, K.E. Sickafus, Phys. Rev. B 71 (2005)
104102.
[27] X.-Y. Liu, W. Windl, M.P. Masquelier, Appl. Phys. Lett. 77
(2000) 2018.
[28] M. Aboy, L. Pelaz, L.A. Marque
´s, J. Barbolla, A. Mokhberi, Y.
Takamura, P.B. Griﬃn, J.D. Plummer, Appl. Phys. Lett. 83
(2003) 4166.
[29] D. Vanderbilt, Phys. Rev. B 41 (1990) 7892.
360
G. Henkelman et al. / Computational Materials Science 36 (2006) 354–360
